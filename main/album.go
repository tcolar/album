// History: Apr 21 14 tcolar Creation

package main

import (
	"flag"
	"log"

	"github.com/tcolar/album"
)

func main() {

	port := flag.Int("port", 3000, "Web service port")
	password := flag.String("password", "", "Admin password (Otherwise autogenerated)")

	flag.Parse()

	if len(flag.Args()) < 1 {
		log.Fatal("Expected album directory as first parameter.")
	}

	conf := album.AlbumConfig{
		AlbumDir:      flag.Args()[0],
		Port:          *port,
		AdminPassword: *password,
		ThumbSize:     album.MediaSizing{0, 200, 200},
		SmallSize:     album.MediaSizing{0, 600, 900},
		MedSize:       album.MediaSizing{640, 1000, 1400},
		LargeSize:     album.MediaSizing{1280, 1440, 1440},
		// TODO : If that option was chnaged form false to true would have to regenreate large scaled images.
		ResizeOriginal: false,
	}
	// TODO: Relative path db
	store, err := album.NewKvStorer("/tmp/album_db")
	if err != nil {
		log.Fatalf("Failed to open db. %v", err)
	}
	s := album.NewServer(&conf, store)
	s.Run()
}
